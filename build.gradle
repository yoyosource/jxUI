plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'org.frgaal.compiler'

    id 'maven-publish'
}

group 'de.jxui'
version 'SNAPSHOT'

ext {
    uberJarName = "${group}-${version}-all.jar"
    jarName = "${group}-${version}.jar"
    libs = "${buildDir}/libs"

    groupName = "${group}"

    publication = major + "." + minor + "." + patch
}

repositories {
    mavenCentral()
}

targetCompatibility = '1.8'
sourceCompatibility = '15'

compileJava.options.encoding = 'UTF-8'
compileJava {
    options.compilerArgs << '-Xlint:deprecation' << '--enable-preview'
}

compileTestJava.options.encoding = 'UTF-8'
compileTestJava {
    options.compilerArgs << '-Xlint:deprecation' << '--enable-preview'
}

mainClassName = ''

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    compileOnly 'org.atteo.classindex:classindex:3.4'
    testCompileOnly 'org.atteo.classindex:classindex:3.4'
    annotationProcessor 'org.atteo.classindex:classindex:3.4'
    testAnnotationProcessor 'org.atteo.classindex:classindex:3.4'

    implementation 'org.objenesis:objenesis:3.1'
    implementation 'eu.infomas:annotation-detector:3.0.5'
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest:2.2'

    testImplementation 'ch.qos.logback:logback-classic:1.3.0-alpha5'
}

// Building
shadowJar {
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}

task incrementMayor {
    description 'Increment Mayor'
    group "Versioning"

    doLast {
        mayor = Integer.parseInt(mayor) + 1
        minor = 0
        patch = 0
        save()
    }
}

task incrementMinor {
    description 'Increment Minor'
    group "Versioning"

    doLast {
        minor = Integer.parseInt(minor) + 1
        patch = 0
        save()
    }
}

task incrementPatch {
    description 'Increment Patch'
    group "Versioning"

    doLast {
        patch = Integer.parseInt(patch) + 1
        save()
    }
}

private void save() {
    File f = new File("${new File("${buildDir}").parentFile.toString()}/gradle.properties")
    String[] strings = f.getText().split("\n")
    for (int i = 0; i < strings.length; i++) {
        if (strings[i].startsWith("mayor = ")) {
            strings[i] = "mayor = " + mayor
        } else if (strings[i].startsWith("minor = ")) {
            strings[i] = "minor = " + minor
        } else if (strings[i].startsWith("patch = ")) {
            strings[i] = "patch = " + patch
        }
    }
    f.text = String.join("\n", strings)
}

// building
task buildProject {
    description 'Build this Project'
    group 'build'

    dependsOn 'build'

    doLast {
        if ("${buildDir}" == null) {
            return
        }
        delete fileTree("${libs}").matching {
            exclude("${uberJarName}")
        }
        file(libs + "/" + uberJarName).renameTo(file(libs + "/" + jarName))
    }
}